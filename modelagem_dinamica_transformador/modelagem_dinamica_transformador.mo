package proposta_trafo
  model single_phase_linear_transformer
    import Modelica.Constants.pi;
    import SI = Modelica.SIunits;
    parameter SI.Frequency fn = 60 "Nominal Linear Frequency";
    parameter SI.AngularFrequency wn = 2 * pi * fn "Nominal Angular Frequency";
    parameter SI.Voltage Vpn3 = 66e3 "T Primary-side ThreePhase RMS Voltage";
    parameter SI.Voltage Vpn = Vpn3 / sqrt(3) "T Primary-side SinglePhase RMS Voltage";
    parameter SI.Voltage Vsn3 = 220e3 "T Secondary-side ThreePhase RMS Voltage";
    parameter SI.Voltage Vsn = Vsn3 / sqrt(3) "T Secondary-side SinglePhase RMS Voltage";
    parameter SI.ApparentPower Sn3 = 600e6 "T ThreePhase ApparentPower";
    parameter SI.ApparentPower Sn = Sn3 / 3 "T SinglePhase ApparentPower";
    parameter Real a = Vpn / Vsn "Transformer Coil Relationship";
    parameter SI.Resistance rp = 0.001 * Vpn ^ 2 / Sn "T Primary-side Resistance";
    parameter SI.Resistance rs_ = a ^ 2 * 0.001 * Vsn ^ 2 / Sn "T Secondary-side Resistance";
    parameter SI.Inductance Llp = 0.06 * Vpn ^ 2 / (wn * Sn) "T Primary-side Leakage Inductance";
    parameter SI.Inductance Lls_ = a ^ 2 * 0.06 * Vsn ^ 2 / (wn * Sn) "T Secondary-side Leakage Inductance";
    parameter SI.Inductance Lm = 25 * Vpn ^ 2 / (wn * Sn) "T Magnetic Inductance";
    parameter SI.Inductance La = 1 / (1 / Lm + 1 / Llp + 1 / Lls_) "Ficticious Inductance";
    parameter SI.Inductance source_reactance = 0.05 * Vpn ^ 2 / (wn * Sn) "Source inductance";
    parameter SI.Angle source_phase = 0 "Source phase angle";
    parameter SI.ReactivePower Q1 = 130e6 / 3;
    parameter SI.Capacitance C = a ^ 2 * Q1 / (wn * Vsn ^ 2);
    SI.Resistance rc;
    SI.Voltage vsource "Source Voltage";
    SI.Voltage vp "T Primary-side Voltage";
    SI.Voltage vs_ "T Secondary-side Voltage";
    SI.Current isource "Source Current";
    SI.Current ip;//(start=-(sqrt(2)*Vpn*wn*(Llp+Lm))/((wn*(Llp+Lm))^2 + rp^2), fixed=true) "T Primary-side Current";
    SI.Current is_ "T Secondary-side Current";
    SI.Current im;
    SI.MagneticFlux fp "Primary-side Leakage Flux";
    SI.MagneticFlux fs_ "Secondary-side Leakage Flux";
    SI.MagneticFlux fm "Magnetic Flux";
  equation
//equacoes de tensao
    vp = rp * ip + der(fp);
    vs_ = rs_ * is_ + der(fs_) + rc * is_;
//equacoes de fluxo
    fp = Llp * ip + fm;
    fs_ = Lls_ * is_ + fm;
    fm = La * (fp / Llp + fs_ / Lls_);
//condicoes de contorno
    vsource = sqrt(2) * Vpn * cos(wn * time + SI.Conversions.from_deg(source_phase)) + source_reactance * der(ip);
    vp = vsource - source_reactance * der(ip);
    isource = -ip;
    is_ = -C * der(vs_);
    rc = if time < 5/60 then 10e3 else 1e3;
  //
    im = ip + is_;
    annotation(
      experiment(StartTime = 0, StopTime = 0.0833333, Tolerance = 1e-06, Interval = 1.66733e-05));
  end single_phase_linear_transformer;

  model single_phase_nonlinear_transformer
    import Modelica.Constants.pi;
    import SI = Modelica.SIunits;
    import Modelica.Blocks.Tables;
    parameter String satFileName = "/home/joaoppeters/Documents/joaoppeters_om/proposta_trafo/fn_sat.txt";
    Tables.CombiTable1Ds fn_sat(columns = {2}, fileName = satFileName, tableName = "sat_fm", tableOnFile = true);
    parameter SI.Frequency freq = 60 "Nominal Linear Frequency";
    parameter SI.AngularFrequency wn = 2 * pi * freq "Nominal Angular Frequency";
    parameter SI.Voltage Vpn3 = 66e3 "T Primary-side ThreePhase RMS Voltage";
    parameter SI.Voltage Vpn = Vpn3 / sqrt(3) "T Primary-side SinglePhase RMS Voltage";
    parameter SI.Voltage Vsn3 = 220e3 "T Secondary-side ThreePhase RMS Voltage";
    parameter SI.Voltage Vsn = Vsn3 / sqrt(3) "T Secondary-side SinglePhase RMS Voltage";
    parameter SI.ApparentPower Sn3 = 600e6 "T ThreePhase ApparentPower";
    parameter SI.ApparentPower Sn = Sn3 / 3 "T SinglePhase ApparentPower";
    parameter Real a = Vpn / Vsn "Transformer Coil Relationship";
    parameter SI.Resistance rp = 0.001 * Vpn ^ 2 / Sn "T Primary-side Resistance";
    parameter SI.Resistance rs_ = a ^ 2 * 0.001 * Vsn ^ 2 / Sn "T Secondary-side Resistance";
    parameter SI.Inductance Llp = 0.06 * Vpn ^ 2 / (wn * Sn) "T Primary-side Leakage Inductance";
    parameter SI.Inductance Lls_ = a ^ 2 * 0.06 * Vsn ^ 2 / (wn * Sn) "T Secondary-side Leakage Inductance";
    parameter SI.Inductance Lm = 25 * Vpn ^ 2 / (wn * Sn) "T Magnetic Inductance";
    parameter SI.Inductance La = 1 / (1 / Lm + 1 / Llp + 1 / Lls_) "Ficticious Inductance";
    parameter SI.Inductance source_reactance = 0.05 * Vpn ^ 2 / (wn * Sn) "Source reactance";
    parameter SI.Angle source_phase = SI.Conversions.from_deg(0) "Source phase angle";
    parameter SI.ReactivePower Q1 = 130e6 / 3;
    parameter SI.Capacitance C = Q1 / (wn * Vsn ^ 2);
    SI.Resistance rc;
    SI.Voltage vsource "Source Voltage";
    SI.Voltage vp "T Primary-side Voltage";
    SI.Voltage vs_ "T Secondary-side Voltage";
    SI.Current isource "Source Current";
    SI.Current ip;//(start=-(sqrt(2)*Vpn*wn*(Llp+Lm))/((wn*(Llp+Lm))^2 + rp^2), fixed=true) "T Primary-side Current";
    SI.Current is_ "T Secondary-side Current";
    SI.Current im;
    SI.MagneticFlux fp "Primary-side Leakage Flux";
    SI.MagneticFlux fs_ "Secondary-side Leakage Flux";
    SI.MagneticFlux fm "Magnetic Flux";
    SI.MagneticFlux Sat "Saturation Flux";
  equation
    vp = rp * ip + der(fp);
    vs_ = rs_ * is_ + der(fs_) + rc * is_;
    vsource = sqrt(2) * Vpn * sin(wn * time + source_phase) + source_reactance * der(ip);
    fp = Llp * ip + fm;
    fs_ = Lls_ * is_ + fm;
    fm = La * (fp / Llp + fs_ / Lls_ - Sat / Lm);
    Sat = fn_sat.y[1];
    fm = fn_sat.u;
    vp = vsource - source_reactance * der(ip);
    isource = -ip;
    is_ = -C * der(vs_);
    rc = 0;//if time < 2/60 then 1e3 else 0.25e3;
  //
    im = ip + is_;
    annotation(
      experiment(StartTime = 0, StopTime = 0.0833333, Tolerance = 1e-06, Interval = 1.667e-05));
  end single_phase_nonlinear_transformer;

  model three_phase_linear_transformer
    import Modelica.Constants.pi;
    import SI = Modelica.SIunits;
    parameter SI.Frequency fn = 60 "Nominal Linear Frequency";
    parameter SI.AngularFrequency wn = 2 * pi * fn "Nominal Angular Frequency";
    parameter SI.Voltage Vpn3 = 66e3 "T Primary-side ThreePhase RMS Voltage";
    parameter SI.Voltage Vpn = Vpn3 / sqrt(3) "T Primary-side SinglePhase RMS Voltage";
    parameter SI.Voltage Vsn3 = 220e3 "T Secondary-side ThreePhase RMS Voltage";
    parameter SI.Voltage Vsn = Vsn3 / sqrt(3) "T Secondary-side SinglePhase RMS Voltage";
    parameter SI.ApparentPower Sn3 = 600e6 "T ThreePhase ApparentPower";
    parameter SI.ApparentPower Sn = Sn3 / 3 "T SinglePhase ApparentPower";
    parameter Real a = Vpn / Vsn "Transformer Coil Relationship";
    parameter SI.Resistance rp = 0.001 * Vpn ^ 2 / Sn "T Primary-side Resistance";
    parameter SI.Resistance rs_ = a ^ 2 * 0.001 * Vsn ^ 2 / Sn "T Secondary-side Resistance";
    parameter SI.Inductance Llp = 0.06 * Vpn ^ 2 / (wn * Sn) "T Primary-side Leakage Inductance";
    parameter SI.Inductance Lls_ = a ^ 2 * 0.06 * Vsn ^ 2 / (wn * Sn) "T Secondary-side Leakage Inductance";
    parameter SI.Inductance Lm = 25 * Vpn ^ 2 / (wn * Sn) "T Magnetic Inductance";
    parameter SI.Inductance La = 1 / (1 / Lm + 1 / Llp + 1 / Lls_) "Ficticious Inductance";
    parameter SI.Inductance source_reactance = 0.05 * Vpn ^ 2 / (wn * Sn) "Source reactance";
    parameter SI.Angle source_phaseA = 0 "SourceA phase angle";
    parameter SI.Angle source_phaseB = -2 * pi / 3 "SourceB phase angle";
    parameter SI.Angle source_phaseC = 2 * pi / 3 "SourceC phase angle";
    parameter SI.ReactivePower Q1 = 130e6 / 3;
    parameter SI.Capacitance Ca = Q1 / (wn * Vsn ^ 2);
    parameter SI.Capacitance Cb = Q1 / (wn * Vsn ^ 2);
    parameter SI.Capacitance Cc = Q1 / (wn * Vsn ^ 2);
    SI.Resistance rcA;
    SI.Resistance rcB;
    SI.Resistance rcC;
    SI.Voltage vsourceA "SourceA Voltage";
    SI.Voltage vsourceB "SourceB Voltage";
    SI.Voltage vsourceC "SourceC Voltage";
    SI.Voltage vpA "T Primary-side Voltage PhaseA";
    SI.Voltage vpB "T Primary-side Voltage PhaseB";
    SI.Voltage vpC "T Primary-side Voltage PhaseC";
    SI.Voltage vsA_ "T Secondary-side Voltage PhaseA";
    SI.Voltage vsB_ "T Secondary-side Voltage PhaseB";
    SI.Voltage vsC_ "T Secondary-side Voltage PhaseC";
    SI.Current ineutral;
    SI.Current isourceA "SourceA Current";
    SI.Current isourceB "SourceB Current";
    SI.Current isourceC "SourceC Current";
    SI.Current ipA "T Primary-side Current PhaseA";
    SI.Current ipB "T Primary-side Current PhaseB";
    SI.Current ipC "T Primary-side Current PhaseC";
    SI.Current isA_ "T Secondary-side Current PhaseA";
    SI.Current isB_ "T Secondary-side Current PhaseB";
    SI.Current isC_ "T Secondary-side Current PhaseC";
    SI.MagneticFlux fpA "Primary-side Leakage Flux PhaseA";
    SI.MagneticFlux fpB "Primary-side Leakage Flux PhaseB";
    SI.MagneticFlux fpC "Primary-side Leakage Flux PhaseC";
    SI.MagneticFlux fsA_ "Secondary-side Leakage Flux PhaseA";
    SI.MagneticFlux fsB_ "Secondary-side Leakage Flux PhaseB";
    SI.MagneticFlux fsC_ "Secondary-side Leakage Flux PhaseC";
    SI.MagneticFlux fmA "Magnetic Flux PhaseA";
    SI.MagneticFlux fmB "Magnetic Flux PhaseB";
    SI.MagneticFlux fmC "Magnetic Flux PhaseC";
  equation
    vpA = rp * ipA + der(fpA);
    vsA_ = rs_ * isA_ + der(fsA_) + rcA * isA_;
    vsourceA = sqrt(2) * Vpn * cos(wn * time + source_phaseA) + source_reactance * der(ipA);
    fpA = Llp * ipA + fmA;
    fsA_ = Lls_ * isA_ + fmA;
    fmA = La * (fpA / Llp + fsA_ / Lls_);
    vpA = vsourceA - source_reactance * der(ipA);
    isourceA = -ipA;
    isA_ = 0;//-Ca * der(vsA_);
    rcA = 0;//if time < 2/60 then 1e3 else 0.25e3;
//
    vpB = rp * ipB + der(fpB);
    vsB_ = rs_ * isB_ + der(fsB_) + rcB * isB_;
    vsourceB = sqrt(2) * Vpn * cos(wn * time + source_phaseB) + source_reactance * der(ipB);
    fpB = Llp * ipB + fmB;
    fsB_ = Lls_ * isB_ + fmB;
    fmB = La * (fpB / Llp + fsB_ / Lls_);
    vpB = vsourceB - source_reactance * der(ipB);
    isourceB = -ipB;
    isB_ = 0;//-Cb * der(vsB_);
    rcB = 0;//if time < 2/60 then 1e3 else 0.25e3;
//
    vpC = rp * ipC + der(fpC);
    vsC_ = rs_ * isC_ + der(fsC_) + rcC * isC_;
    vsourceC = sqrt(2) * Vpn * cos(wn * time + source_phaseC) + source_reactance * der(ipC);
    fpC = Llp * ipC + fmC;
    fsC_ = Lls_ * isC_ + fmC;
    fmC = La * (fpC / Llp + fsC_ / Lls_);
    vpC = vsourceC - source_reactance * der(ipC);
    isourceC = -ipC;
    isC_ = 0;//-Cc * der(vsC_);
    rcC = 0;//if time < 2/60 then 1e3 else 0.25e3;
//
    ineutral = ipA + ipB + ipC;
    annotation(
      experiment(StartTime = 0, StopTime = 0.0833333, Tolerance = 1e-06, Interval = 1.66673e-06));
  end three_phase_linear_transformer;
  
  model three_phase_nonlinear_transformer
    import Modelica.Constants.pi;
    import SI = Modelica.SIunits;
    import Modelica.Blocks.Tables;
    parameter String satFileName = "/home/joaoppeters/Documents/joaoppeters_om/proposta_trafo/fn_sat.txt";
    Tables.CombiTable1Ds fn_satA(columns = {2}, fileName = satFileName, tableName = "sat_fm", tableOnFile = true);
    Tables.CombiTable1Ds fn_satB(columns = {2}, fileName = satFileName, tableName = "sat_fm", tableOnFile = true);
    Tables.CombiTable1Ds fn_satC(columns = {2}, fileName = satFileName, tableName = "sat_fm", tableOnFile = true);
    parameter SI.Frequency fn = 60 "Nominal Linear Frequency";
    parameter SI.AngularFrequency wn = 2 * pi * fn "Nominal Angular Frequency";
    parameter SI.Voltage Vpn3 = 66e3 "T Primary-side ThreePhase RMS Voltage";
    parameter SI.Voltage Vpn = Vpn3 / sqrt(3) "T Primary-side SinglePhase RMS Voltage";
    parameter SI.Voltage Vsn3 = 220e3 "T Secondary-side ThreePhase RMS Voltage";
    parameter SI.Voltage Vsn = Vsn3 / sqrt(3) "T Secondary-side SinglePhase RMS Voltage";
    parameter SI.ApparentPower Sn3 = 600e6 "T ThreePhase ApparentPower";
    parameter SI.ApparentPower Sn = Sn3 / 3 "T SinglePhase ApparentPower";
    parameter Real a = Vpn / Vsn "Transformer Coil Relationship";
    parameter SI.Resistance rp = 0.001 * Vpn ^ 2 / Sn "T Primary-side Resistance";
    parameter SI.Resistance rs_ = a ^ 2 * 0.001 * Vsn ^ 2 / Sn "T Secondary-side Resistance";
    parameter SI.Inductance Llp = 0.06 * Vpn ^ 2 / (wn * Sn) "T Primary-side Leakage Inductance";
    parameter SI.Inductance Lls_ = a ^ 2 * 0.06 * Vsn ^ 2 / (wn * Sn) "T Secondary-side Leakage Inductance";
    parameter SI.Inductance Lm = 25 * Vpn ^ 2 / (wn * Sn) "T Magnetic Inductance";
    parameter SI.Inductance La = 1 / (1 / Lm + 1 / Llp + 1 / Lls_) "Ficticious Inductance";
    parameter SI.Inductance source_reactance = 0.05 * Vpn ^ 2 / (wn * Sn) "Source reactance";
    parameter SI.Angle source_phaseA = 0 "SourceA phase angle";
    parameter SI.Angle source_phaseB = -2 * pi / 3 "SourceB phase angle";
    parameter SI.Angle source_phaseC = 2 * pi / 3 "SourceC phase angle";
    parameter SI.ReactivePower Q1 = 130e6 / 3;
    parameter SI.Capacitance Ca = Q1 / (wn * Vsn ^ 2);
    parameter SI.Capacitance Cb = Q1 / (wn * Vsn ^ 2);
    parameter SI.Capacitance Cc = Q1 / (wn * Vsn ^ 2);
    SI.Resistance rcA;
    SI.Resistance rcB;
    SI.Resistance rcC;
    SI.Voltage vsourceA "SourceA Voltage";
    SI.Voltage vsourceB "SourceB Voltage";
    SI.Voltage vsourceC "SourceC Voltage";
    SI.Voltage vpA "T Primary-side Voltage PhaseA";
    SI.Voltage vpB "T Primary-side Voltage PhaseB";
    SI.Voltage vpC "T Primary-side Voltage PhaseC";
    SI.Voltage vsA_ "T Secondary-side Voltage PhaseA";
    SI.Voltage vsB_ "T Secondary-side Voltage PhaseB";
    SI.Voltage vsC_ "T Secondary-side Voltage PhaseC";
    SI.Current ineutral;
    SI.Current isourceA "SourceA Current";
    SI.Current isourceB "SourceB Current";
    SI.Current isourceC "SourceC Current";
    SI.Current ipA "T Primary-side Current PhaseA";
    SI.Current ipB "T Primary-side Current PhaseB";
    SI.Current ipC "T Primary-side Current PhaseC";
    SI.Current isA_ "T Secondary-side Current PhaseA";
    SI.Current isB_ "T Secondary-side Current PhaseB";
    SI.Current isC_ "T Secondary-side Current PhaseC";
    SI.MagneticFlux fpA "Primary-side Leakage Flux PhaseA";
    SI.MagneticFlux fpB "Primary-side Leakage Flux PhaseB";
    SI.MagneticFlux fpC "Primary-side Leakage Flux PhaseC";
    SI.MagneticFlux fsA_ "Secondary-side Leakage Flux PhaseA";
    SI.MagneticFlux fsB_ "Secondary-side Leakage Flux PhaseB";
    SI.MagneticFlux fsC_ "Secondary-side Leakage Flux PhaseC";
    SI.MagneticFlux fmA "Magnetic Flux PhaseA";
    SI.MagneticFlux fmB "Magnetic Flux PhaseB";
    SI.MagneticFlux fmC "Magnetic Flux PhaseC";
    SI.MagneticFlux SatA;
    SI.MagneticFlux SatB;
    SI.MagneticFlux SatC;
  equation
    vpA = rp * ipA + der(fpA);
    vsA_ = rs_ * isA_ + der(fsA_) + rcA * isA_;
    vsourceA = sqrt(2) * Vpn * cos(wn * time + source_phaseA) + source_reactance * der(ipA);
    fpA = Llp * ipA + fmA;
    fsA_ = Lls_ * isA_ + fmA;
    fmA = La * (fpA / Llp + fsA_ / Lls_ - SatA / Lm);
    SatA = fn_satA.y[1];
    fmA = fn_satA.u;
    vpA = vsourceA - source_reactance * der(ipA);
    isourceA = -ipA;
    isA_ = 0;//-Ca * der(vsA_);
    rcA = 0;//if time < 2/60 then 1e3 else 0.25e3;
  //
    vpB = rp * ipB + der(fpB);
    vsB_ = rs_ * isB_ + der(fsB_) + rcB * isB_;
    vsourceB = sqrt(2) * Vpn * cos(wn * time + source_phaseB) + source_reactance * der(ipB);
    fpB = Llp * ipB + fmB;
    fsB_ = Lls_ * isB_ + fmB;
    fmB = La * (fpB / Llp + fsB_ / Lls_ - SatB / Lm);
    SatB = fn_satB.y[1];
    fmB = fn_satB.u;
    vpB = vsourceB - source_reactance * der(ipB);
    isourceB = -ipB;
    isB_ = 0;//-Cb * der(vsB_);
    rcB = 0;//if time < 2/60 then 1e3 else 0.25e3;
  //
    vpC = rp * ipC + der(fpC);
    vsC_ = rs_ * isC_ + der(fsC_) + rcC * isC_;
    vsourceC = sqrt(2) * Vpn * cos(wn * time + source_phaseC) + source_reactance * der(ipC);
    fpC = Llp * ipC + fmC;
    fsC_ = Lls_ * isC_ + fmC;
    fmC = La * (fpC / Llp + fsC_ / Lls_ - SatC / Lm);
    SatC = fn_satC.y[1];
    fmC = fn_satC.u;
    vpC = vsourceC - source_reactance * der(ipC);
    isourceC = -ipC;
    isC_ = 0;//-Cc * der(vsC_);
    rcC = 0;//if time < 2/60 then 1e3 else 0.25e3;
  //
    ineutral = ipA + ipB + ipC;
    annotation(
      experiment(StartTime = 0, StopTime = 0.0833333, Tolerance = 1e-06, Interval = 0.000167336));
  end three_phase_nonlinear_transformer;
end proposta_trafo;